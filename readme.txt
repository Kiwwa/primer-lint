--------------------------------------------------------------------------------
Primer-Lint: Primer Analysis Tool for hiplex-primer protocol
--------------------------------------------------------------------------------

Version 1.0

Authors: Tu Nguyen-Dumont (1), Daniel J Park (1),
         Bernard J Pope (2), Luke D Shillabeer (2).

         (1) Genetic Epidemiology Laboratory, Department of Pathology.
         (2) Victorian Life Sciences Computation Initiative.

         The University of Melbourne, Australia

Web:	 https://github.com/kiwwa/primer-lint

License: BSD

Requirements: Python 2.7 and the BioPython Library.
(http://biopython.org)

--------------------------------------------------------------------------------
General description
--------------------------------------------------------------------------------

Primer-Lint was created to analyse the primers generated by the hiplex protocol 
(1) for a number of features that are believed to be either beneficial or 
detrimental to primer efficacy. These features can be used pre-PCR to detect
potentially troublesome primers or post-sequencing to analyse the impact each 
feature had on the primers efficacy. 

--------------------------------------------------------------------------------
Installation
--------------------------------------------------------------------------------

The easiest way to install Primer-Lint is via pip (3).

Type this into terminal: pip install git+http://github.com/Kiwwa/primer-lint.git

Alternatively Primer-Lint can be downloaded and manually installed from (4).

--------------------------------------------------------------------------------
Features 
--------------------------------------------------------------------------------

Features able to be analysed for each primer are;

GC content: The count of G and C nucleotides within each given primer, reported 
            as a percentage.
 
   * Example primer sequence is GGGAATAACC.
   * Total length of sequence is 10 nucleotides.
   * Count of G's and C's within sequence is 5.
   * GC content of example sequence is 5/10, 50%.

Primer hairpins: Measures primer sequence self-interaction.

   * Example sequence is TTGAATATAATGGCCCAATATTCC.
   * A run of six rungs of self-interaction are present within this sequence 
     (as shown below);

   TTGAATATAATG\
     ||||||     G
    CCTTATAACCC/

Primer Dimer interactions: Measures two or more primers interaction with each 
other.

   * Example sequences are:
      > Sequence one - GGGATATACTAA
      > Sequence two - AAAGCTCCCTAT
   * Sequences have six nuclotide run that could interact (as shown below);

          GGGATATACTAA
          ||||||
    AAAGCTCCCTAT

--------------------------------------------------------------------------------
Command line interaction
--------------------------------------------------------------------------------

Interaction with the tool is via the command-line. 

usage: primerlint.py [--importhiplex CSV] [--importfasta FAS] --outputlog O 
       [--cg] [--cgbrief] [--cgmin CGMIN] [--cgmax CGMAX] [--hairpin HP] 
       [--primerdimer PD]

Arguments: 
	
--importhiplex
   Description: Imports a CSV file, formatted in the hiplex-primer (2) 
                output style. Expects primer-names in first column and sequence 
                in the second column.
   Type:        File

--importfasta
   Description: Imports a FASTA formatted file. Can process multiple FASTA 
                sequences from a single file.
   Type:        File
	
--outputlog
   Description: Location and name of the output file.
   Type:        File

--cg
   Description: Calculates the CG content percentage of each primer imported.
   Type:        Boolean

--cgbrief
   Description: Calculates the CG content percentage of each primer imported and
                generates a much briefer report.
   Type:        Boolean

--cgmin n
   Description: The minimum bound of acceptable CG content.
   Type:        Integer
   Default:     40

--cgmax n
   Description: The maximum bound of acceptable CG content.
   Type:        Integer
   Default:     60

--hairpin n
   Description: Determines all continuous hairpin locations on each primer 
                imported. Integer supplied to this argument is the minimum size 
                of hairpin to report.
   Type:        Integer
   Default:     0

--hairpinmaxsizes
   Description: Calculates the same hairpins as --hairpin, however generates a 
                significantly briefer report of only the maximum size of 
                hairpin, rather than all possible hairpins.
   Type:        Boolean

--primerdimer
   Description: Determines all possible primer-dimer interactions between all of
                the imported primers.
   Type:        Integer
   Default:     1
   Note:        As this is comparing all primers to all primers, the speed of 
                this calculation increases exponentially as more primers are 
                added. A maximum of 500 primers is recommended.

File type arguments can be specified as either relative or absolute paths. 
Relative paths are interpreted "relative" to the directory from which the 
program was executed, whereas absolute paths are not, and must be specified in 
full. If the file you wish to specify resides in the same directory from which 
the program is run then a relative path would be just the name of the file on 
its own. 

Boolean type arguments do not require parameters; they will work simply by using
them.

Integer type arguments require an integer as a parameter. The use of the integer
for each argument has been specified within the arguments description above.

--------------------------------------------------------------------------------
Inputs and Outputs
--------------------------------------------------------------------------------

Only one import file can be specified at a time, meaning both --importhiplex and
--importfasta cannot be used within a single run of the application. An error
message will be displayed if it is attempted.

Primer-Lint's inputs are:

   * FASTA: The text after '>' is used as a primer/region name, the sequence 
            underneath is used as the primer sequence.
   * CSV:   Column one is primer/region name, column two is the primer sequence.

Both accepted input formats can contain multiple sequences within a single file.

Primer-Lint's output is:

   * Log file: The log file will contain the generated information based on the 
               arguments provided when Primer-Lint is run. 

   * An example of the output log is available at: http://pastebin.com/0xDvbpvH

--------------------------------------------------------------------------------
Example usage (should be all on one line)
--------------------------------------------------------------------------------

We want to analyse a set of 60 primers for their CG percentage, potential 
hairpins and primer-dimer interactions. 

We believe CG percentage should be between 30 and 70, do not want to be notified
of any hairpin interaction that is 5 rungs or less or any primer-dimer 
interaction that is less than 5 rungs.

Here are the file locations;

   File to import (relative location): /input/60-primers.csv
   File to export (relative location): /output/output-60-primers.log

This is the command that would fulfill those requirements;

   python primer-lint.py --importhiplex input/60-primers.csv --outputlog 
   output/output-60-primers.log --cg --cgmin 30 --cgmax 70 --hairpin 6 
   --primerdimer 5

--------------------------------------------------------------------------------
Troubleshooting
--------------------------------------------------------------------------------

Question: I can't get primer-lint to import a CSV file, I'm getting errors 
          like this; 
          
     "Error importing hiplex-CSV file... <type 'exceptions.SystemExit'>"

Solution: Copy and paste the csv data from the current file into a new csv file.
          This appears to be caused by the original file being locked or having
          incorrect file permissions.

--------------------------------------------------------------------------------
References
--------------------------------------------------------------------------------

1. http://www.biotechniques.com/BiotechniquesJournal/2013/August/A-high-plex-
PCR-approach-for-massively-parallel-sequencing/biotechniques-345734.html

2. https://github.com/bjpop/hiplex-primer

3. http://www.pip-installer.org/en/latest/installing.html

4. https://github.com/Kiwwa/Primer-Lint